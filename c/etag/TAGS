
../dendrogram.html,206
            function moveChildren(node) {moveChildren54,1521
                function update(source) {update69,2025
        function click(d) {click158,7424
        function color(d) {color169,7714

../Makefile,346
TARGETS = btreeTARGETS3,2
LIB_FILES = cog data util splay zipf policyLIB_FILES4,18
REWRITE_FILES = adaptive_merge crackerREWRITE_FILES5,62
FILES = \FILES6,101
CC = gcc -std=c11 -Isrc/include -gCC11,205
advanced: CC = gcc -D__ADVANCED -std=c11 -Isrc/include -gCC12,240
harvest: CC = gcc -D__HARVEST -std=c11 -Isrc/include -gCC13,298

../src/documentation/documentation.c,177
+test4+__test4__3,4
+test5+__test5__7,39
+splayTest+__splayTest__11,74
+test6+__test6__15,113
+test7+__test7__19,148
+test8+__test8__23,183
+test9+__test9__27,218

../src/include/adaptive_merge.h,145
#define ADAPTIVE_MERGE_H_SHEILDADAPTIVE_MERGE_H_SHEILD2,32
#define BLOCK_SIZE BLOCK_SIZE4,65
#define MERGE_BLOCK_SIZE MERGE_BLOCK_SIZE5,88

../src/include/cog.h,2934
#define MAX_VALUE MAX_VALUE3,38
#define MIN_VALUE MIN_VALUE4,66
#define BTREE_H_SHIELDBTREE_H_SHIELD7,117
  COG_CONCAT, COG_BTREE, COG_ARRAY, COG_SORTEDARRAYCOG_CONCAT10,156
  COG_CONCAT, COG_BTREE, COG_ARRAY, COG_SORTEDARRAYCOG_BTREE10,156
  COG_CONCAT, COG_BTREE, COG_ARRAY, COG_SORTEDARRAYCOG_ARRAY10,156
  COG_CONCAT, COG_BTREE, COG_ARRAY, COG_SORTEDARRAYCOG_SORTEDARRAY10,156
} cog_type;cog_type11,208
typedef struct cog {cog13,221
  cog_type type;type14,242
    struct { struct cog *lhs; struct cog *rhs; } concat;lhs16,269
    struct { struct cog *lhs; struct cog *rhs; } concat;rhs16,269
    struct { struct cog *lhs; struct cog *rhs; } concat;concat16,269
    struct { struct cog *lhs; struct cog *rhs; long sep; } btree;lhs18,345
    struct { struct cog *lhs; struct cog *rhs; long sep; } btree;rhs18,345
    struct { struct cog *lhs; struct cog *rhs; long sep; } btree;sep18,345
    struct { struct cog *lhs; struct cog *rhs; long sep; } btree;btree18,345
    struct { struct cog *lhs; struct cog *rhs; long sep; long rds; } btree;lhs20,417
    struct { struct cog *lhs; struct cog *rhs; long sep; long rds; } btree;rhs20,417
    struct { struct cog *lhs; struct cog *rhs; long sep; long rds; } btree;sep20,417
    struct { struct cog *lhs; struct cog *rhs; long sep; long rds; } btree;rds20,417
    struct { struct cog *lhs; struct cog *rhs; long sep; long rds; } btree;btree20,417
    struct { int start; int len; buffer records; } array;start22,500
    struct { int start; int len; buffer records; } array;len22,500
    struct { int start; int len; buffer records; } array;records22,500
    struct { int start; int len; buffer records; } array;array22,500
    struct { int start; int len; buffer records; } sortedarray;start23,558
    struct { int start; int len; buffer records; } sortedarray;len23,558
    struct { int start; int len; buffer records; } sortedarray;records23,558
    struct { int start; int len; buffer records; } sortedarray;sortedarray23,558
  } data;data24,622
} cog;cog25,632
typedef struct list {list27,640
  struct cog *cog;cog28,662
  struct list *next;next29,681
} list;list30,702
typedef struct extracted_components {extracted_components32,711
  struct cog *lhs;lhs33,749
  struct cog *rhs;rhs34,768
  long low_key;low_key35,787
  long high_key;high_key36,803
  struct iterator *iter;iter37,820
} extracted_components;extracted_components38,845
typedef struct triple {triple40,870
  struct cog *cog;cog41,894
  int depth;depth42,913
  long key;key43,926
} triple;triple44,938
typedef struct stack_triple {stack_triple46,949
  struct triple *triple;triple47,979
  struct stack_triple *next;next48,1004
} stack_triple;stack_triple49,1033
typedef struct double_struct {double_struct51,1050
  struct cog *cog;cog52,1081
  iterator iter;iter53,1100
} double_struct;double_struct54,1117

../src/include/cracker.h,101
#define CRACKER_H_SHEILDCRACKER_H_SHEILD2,25
#define FALSE FALSE10,169
#define TRUE TRUE11,202

../src/include/data.h,1163
#define BTREE_LIB_H_SHIELDBTREE_LIB_H_SHIELD3,28
typedef struct record {record20,787
  long key;                 // The key of the record.key21,811
  long value;               // The value of the record (mostly ignored by value22,865
} *record;record24,979
typedef struct buffer {buffer35,1536
  int refcount;             // The number of references to this buffer.refcount36,1560
  int size;                 // The number of records in this buffer.size37,1632
  struct record data[0];    // The data values in this buffer.  data38,1701
} *buffer;buffer39,1766
typedef struct iterator_impl {iterator_impl46,2080
  int (*has_next)(void *data);has_next47,2111
  void (*get_next)(void *data, record rec);get_next48,2142
  void (*next)(void *data, record rec);next49,2186
  void (*cleanup)(void *data);cleanup50,2226
} *iterator_impl;iterator_impl51,2257
typedef struct iterator {iterator53,2276
  iterator_impl impl;impl54,2302
  void *data;data55,2324
} *iterator;iterator56,2338
typedef struct iter_list {iter_list58,2353
  iterator iter;iter59,2380
  struct iter_list *next;next60,2397
} iter_list;iter_list61,2423

../src/include/policy.h,53
#define POLICY_LIB_H_SHIELDPOLICY_LIB_H_SHIELD2,28

../src/include/splay.h,51
#define SPLAY_LIB_H_SHIELDSPLAY_LIB_H_SHIELD2,27

../src/include/util.h,49
#define UTIL_LIB_H_SHIELDUTIL_LIB_H_SHIELD2,26

../src/include/zipf.h,154
#define ZIPF_LIB_H_SHIELDZIPF_LIB_H_SHIELD2,26
#define FALSE FALSE6,72
#define TRUE TRUE7,105
#define E_NUM E_NUM8,137
#define GAMMA GAMMA9,180

../src/lib/cog.c,2124
void free_cog(cog *c) { free(c); }free_cog6,75
void clean(cog *c) {clean8,111
void cleanup(cog *c){cleanup21,309
cog *make_concat( struct cog *lhs, struct cog *rhs ) {make_concat41,745
cog *make_btree( struct cog *lhs, struct cog *rhs, long sep ) {make_btree48,943
cog *make_array( int start, int len, buffer records ) {make_array59,1228
cog *make_sortedarray( int start, int len, buffer records ) {make_sortedarray68,1491
extracted_components *make_extracted_components(struct cog *lhs, struct cog *rhs, long low_key, long high_key, iterator iter) {make_extracted_components77,1784
void cleanup_extracted_components(extracted_components *extracted_components) {cleanup_extracted_components87,2233
iterator scan( struct cog *cog, long low, long high ) {scan93,2436
iterator scan_full_array( struct cog *cog) {scan_full_array144,3943
int cog_length(struct cog *cog) {cog_length198,5487
list *create_list() {create_list210,5875
void cleanup_list(list *list) {cleanup_list215,5966
int list_has_next(list *list) {list_has_next230,6232
list *get_cog_from_list(list *list, struct cog *cog) {get_cog_from_list238,6338
int get_length(list *list) {get_length246,6649
void convert_to_sortedarray(struct cog *cog) {convert_to_sortedarray255,6794
struct cog *array_load(iterator iter,int len) {array_load262,7020
long cog_min(struct cog *c) {cog_min277,7374
stack_triple *create_stack() {create_stack303,7994
void push_stack(struct triple *t, stack_triple **top) {push_stack310,8144
stack_triple *pop_stack(stack_triple **top) {pop_stack317,8294
int stack_empty(stack_triple **top) {stack_empty323,8410
int peek_depth(stack_triple **top) {peek_depth331,8525
triple *create_triple() {create_triple335,8597
double_struct *create_double_struct() {create_double_struct341,8706
void cleanup_stack(stack_triple *stack) {cleanup_stack346,8817
void fold_append(stack_triple **stack, struct cog *c, long low) {fold_append351,8900
cog *fold(stack_triple **stack) {fold367,9360
cog *makeBtreeWithReads(struct cog *lhs, struct cog *rhs, long sep, long rds) {makeBtreeWithReads391,10080

../src/lib/data.c,3260
buffer buffer_alloc(int size)buffer_alloc7,70
void buffer_retain(buffer b)buffer_retain15,229
void buffer_release(buffer b)buffer_release20,281
record buffer_start(buffer b, int idx){buffer_start30,403
long buffer_key(buffer b, int i){buffer_key34,472
long buffer_value(buffer b, int i){buffer_value37,533
void record_copy(record src, record dst){record_copy43,627
void record_set(record src, long key, long value){record_set48,724
void record_swap(record ir, record jr){record_swap53,820
void record_dump(record r, int start, int end)record_dump59,956
void record_sort(record r, int start, int end)record_sort67,1099
int record_binarysearch(record r, long key, int start, int len)record_binarysearch105,1976
int radix(buffer b, int low, int cnt, int radix){radix124,2414
int iter_has_next(iterator iter)iter_has_next140,2723
void iter_get_next(iterator iter, record r)iter_get_next144,2803
void iter_next(iterator iter, record r)iter_next148,2897
void iter_cleanup(iterator iter)iter_cleanup152,2976
void iter_dump(iterator iter)iter_dump157,3062
iter_list *iter_list_add(iter_list *list, iterator iter) {iter_list_add166,3220
void iter_list_cleanup(iter_list *list) {iter_list_cleanup175,3442
int iter_list_length(iter_list *list) {iter_list_length184,3590
  int curr;curr194,3768
  int size;size195,3780
  iterator iters[0];  iters196,3792
} merge_iter_data;merge_iter_data197,3815
int merge_iter_has_next(void *vdata) {merge_iter_has_next200,3836
void merge_iter_get_next(void *vdata, record r) {merge_iter_get_next231,4592
void merge_iter_next(void *vdata, record r) {merge_iter_next236,4723
void merge_iter_cleanup(void *vdata) {merge_iter_cleanup241,4846
struct iterator_impl merge_iter_impl = {merge_iter_impl246,4936
iterator iter_merge(iter_list *list) {iter_merge253,5067
  buffer b;b273,5577
  int curr;curr274,5589
  int end;end275,5601
} array_iter_data;array_iter_data276,5612
int array_iter_has_next(void *vdata)array_iter_has_next278,5632
void array_iter_next(void *vdata, record r)array_iter_next283,5739
void array_iter_get_next(void *vdata, record r)array_iter_get_next289,5884
void array_iter_cleanup(void *vdata)array_iter_cleanup294,6017
struct iterator_impl array_iter_impl = {array_iter_impl301,6133
iterator array_iter_alloc(buffer b, int start, int end)array_iter_alloc308,6264
  int idx;idx326,6652
  int cnt;cnt327,6663
  iterator iters[0];iters328,6674
} concat_iter_data;concat_iter_data329,6695
int concat_iter_has_next(void *vdata)concat_iter_has_next331,6716
void concat_iter_next(void *vdata, record r)concat_iter_next336,6826
void concat_iter_get_next(void *vdata, record r)concat_iter_get_next348,7097
void concat_iter_cleanup(void *vdata)concat_iter_cleanup355,7263
struct iterator_impl concat_iter_impl = {concat_iter_impl365,7435
iterator iter_concat(iterator a, iterator b)iter_concat372,7571
iterator array_binarysearch_scan(long low, long high, int start, int len, buffer buffer)array_binarysearch_scan388,7967
iterator array_scan(long low, long high, int start, int len, buffer buffer)array_scan405,8563
int math_min(int arg1, int arg2) {math_min422,8992
int math_max(int arg1, int arg2) {math_max426,9066

../src/lib/policy.c,897
#define _DECAY_FACTOR _DECAY_FACTOR11,134
#define _DECAY_THRESHOLD _DECAY_THRESHOLD12,161
static long _interval  = 100;_interval14,225
static long _threshold = 10;_threshold15,255
static long _splays    = 0;_splays16,284
struct cog *findSplayCandidate(struct cog *cog, long reads) {findSplayCandidate25,544
struct cog *zipfinizeSubtree(struct cog *cog, long levels) {zipfinizeSubtree51,1284
struct cog *zipfinize(struct cog *cog, long levels) {zipfinize78,2192
void decaySubtree(struct cog *cog) {decaySubtree95,2695
struct cog *decay(struct cog *cog) {decay109,3053
void setInterval(long interval) {setInterval119,3245
void setThreshold(long threshold) {setThreshold128,3388
void initInterval(long interval, long threshold) {initInterval138,3648
long getInterval() {getInterval148,3891
long getThreshold() {getThreshold157,4030
long getSplays() {getSplays166,4245

../src/lib/splay.c,652
struct cog *zig(struct cog *root, struct cog *node) {zig17,271
struct cog *zag(struct cog *root, struct cog *node) {zag36,838
struct cog *zigzig(struct cog *root, struct cog *node) {zigzig55,1393
struct cog *zagzag(struct cog *root, struct cog *node) {zagzag80,2255
struct cog *zigzag(struct cog *root, struct cog *node) {zigzag105,3117
struct cog *zagzig(struct cog *root, struct cog *node) {zagzig129,3944
int getDepth(struct cog *root, struct cog *node) {getDepth153,4792
struct cog *splayDepth(struct cog *root, struct cog *node, int depth) {splayDepth179,5653
struct cog *splay(struct cog *root, struct cog *node) {splay249,8124

../src/lib/util.c,1327
void printArrayCog(struct cog *cog) {printArrayCog17,272
void printTreeCog(struct cog *cog) {printTreeCog48,1043
void printCog(struct cog *cog) {printCog68,1409
void printJITD(struct cog *cog, int depth) {printJITD91,1950
void jsonize(struct cog *cog, FILE *file) {jsonize138,2998
void jsonJITD(struct cog *cog, char *name) {jsonJITD161,3662
void printMode() {printMode169,3834
long getBtreeNodeCount(struct cog *cog) {getBtreeNodeCount183,4102
long inorderStep(struct cog *cog, struct cog **list, long index) {inorderStep207,4715
struct cog **inorder(struct cog *cog, long count) {inorder231,5385
struct cog *getMedian(struct cog *root) {getMedian255,5976
struct cog *timeRun(struct cog *(*function)(struct cog *, long, long),timeRun272,6447
struct cog *randomReads(struct cog *cog, long number, long range) {randomReads294,7163
struct cog *zipfianReads(struct cog *cog, double alpha, long number, long range) {zipfianReads314,7695
int seedlessRandom() {seedlessRandom330,8081
cog *getRandomArray(int size, int range) {getRandomArray348,8370
struct cog *splayOnHarvest(struct cog *cog, long reads, long range, int doSplay, int steps) {splayOnHarvest370,9014
long getCumulativeReads(struct cog *cog) {getCumulativeReads388,9493
long getReadsAtNode(struct cog *cog) {getReadsAtNode399,9780

../src/lib/zipf.c,348
static int _initialized = FALSE;_initialized8,77
int zipf(double alpha, int n) {zipf17,316
double rand_val(int seed) {rand_val61,1480
double harmonic(int n, double alpha) {harmonic95,2376
long getZipfCountAtCDF(long n, double alpha, float cdf) {getZipfCountAtCDF113,3014
long getNumberOfLevels(long elements) {getNumberOfLevels123,3337

../src/rewrites/adaptive_merge.c,376
cog *partition_cog(cog *c) {partition_cog6,85
list *gather_partitions(list *list, cog *c) {gather_partitions41,908
double_struct *amerge(cog *c, long low, long high) {amerge60,1384
double_struct *merge_partitions(cog *c, long low, long high) {merge_partitions106,2816
extracted_components *extract_partitions(cog *c, long low, long high) {extract_partitions199,5679

../src/rewrites/cracker.c,347
cog *pushdown_concats(cog *c, long low, long high) {pushdown_concats14,305
cog *crack_one(cog *c, long val) {crack_one110,3204
struct cog *harvest = NULL;harvest190,5417
struct cog *getHarvest() {getHarvest197,5590
cog *crack_scan(cog *c, long low, long high) {crack_scan210,5864
cog *crack(cog *c, long low, long high) {crack345,9525

../src/test/btree_test.c,1100
#define BUFFER_SIZE BUFFER_SIZE14,224
#define KEY_RANGE KEY_RANGE15,247
buffer mk_random_buffer(int size) mk_random_buffer17,274
buffer mk_sorted_buffer(int size) mk_sorted_buffer30,511
cog *mk_random_array(int size) mk_random_array38,666
cog *mk_sorted_array(int size) mk_sorted_array43,757
void test_scan(cog *c, long low, long high) test_scan48,854
void test1() test155,983
void test2() test264,1145
void test3() test372,1306
void test4() test486,1573
void test5() test5101,1851
void splayTest() splayTest125,2346
void test6(int reads)test6149,3082
void test7(int reads)test7162,3470
struct cog *doZipfianReads(struct cog *cog, long number, long range) doZipfianReads186,4233
struct cog *zipfianReads_splay(struct cog *cog, long number, long range) zipfianReads_splay211,4755
void test8() test8232,5203
void test9() test9247,5594
void readsCounterTest() readsCounterTest263,6085
void testZipfinize() testZipfinize290,6629
void testConvergence() testConvergence305,7019
void testSpeed() testSpeed359,8211
int main(int argc, char **argv) main410,9275
